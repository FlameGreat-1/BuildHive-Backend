// ===== UTILS EXPORTS =====
export {
  buildHiveLogger,
  winstonLogger,
  buildHiveResponse,
  BuildHiveAuthError,
  AuthErrorFactory,
  AuthErrorHandler,
  AUTH_ERROR_CODES,
  utils,
  gracefulShutdown,
} from './utils';

// ===== MIDDLEWARE EXPORTS =====
export {
  errorHandler,
  asyncHandler,
  notFoundHandler,
  validationErrorHandler,
  ErrorMiddleware,
  authRateLimit,
  profileRateLimit,
  generalRateLimit,
  strictRateLimit,
  dynamicRateLimit,
  customRateLimit,
  skipRateLimitIf,
  rateLimitHealthCheck,
  RateLimitMiddleware,
  middleware,
  AuthMiddleware,
  SecurityMiddleware,
  LoggingMiddleware,
  ValidationMiddleware,
  MiddlewareContainer,
  createMiddlewareContainer,
  createAllMiddleware,
  initializeMiddleware,
  authMiddleware,
  sessionMiddleware,
  profileOwnershipMiddleware,
  corsMiddleware,
  securityMiddleware,
  loggingMiddleware,
  imageUploadMiddleware,
  requireAuth,
  requireRole,
  requireEmailVerification,
  requirePhoneVerification,
  rateLimiters,
  validateRequest,
} from './middleware';

// ===== TYPE EXPORTS =====
export type {
  BaseApiResponse,
  ApiSuccessResponse,
  ApiErrorResponse,
  ApiResponse,
  PaginationMeta,
  PaginatedApiResponse,
  BaseQueryParams,
  FilterParams,
  QueryParams,
  FileUploadResponse,
  BulkOperationResponse,
  HealthCheckResponse,
  UserRole,
  UserStatus,
  VerificationStatus,
  BaseUser,
  BaseProfile,
  Address,
  BusinessInfo,
  ContactInfo,
  AuditInfo,
  SearchResult,
  NotificationData,
  ActivityLog,
  RateLimitInfo,
  ValidationError,
  ApiErrorDetail,
  RequestContext,
  SessionInfo,
  Optional,
  RequiredFields,
  PartialExcept,
  ID,
  Timestamps,
  SoftDelete,
  BaseEntity,
  BaseEntityWithSoftDelete,
  ObjectId,
  BaseDocument,
  BaseDocumentWithSoftDelete,
  DatabaseConnectionStatus,
  QueryOptions,
  PopulateOptions,
  PaginationOptions,
  PaginatedResult,
  AggregationStage,
  IndexDefinition,
  SchemaOptions,
  TransactionOptions,
  BulkWriteOperation,
  BulkWriteResult,
  DatabaseValidationError,
  DatabaseErrorType,
  DatabaseOperationResult,
  CacheConfig,
  RedisKeyPatterns,
  RedisPubSubMessage,
  DatabaseHealthMetrics,
  AuditTrailDocument,
  SessionDocument,
  FileDocument,
  NotificationDocument,
  Repository,
  DatabaseService,
  DocumentArray,
  Mixed,
  Decimal128,
  VerifyEmailRequest,
  VerifyPhoneRequest,
  ProfileSearchRequest,
  ValidationResponse,
  SortOptions,
  ForgotPasswordRequest,
  ResetPasswordRequest,
  AuthResponse,
  User,
  PlatformType,
  AuthProvider,
  TokenType,
  DeviceInfo,
  LocationInfo,
  RegisterRequest,
  LoginRequest,
  RefreshTokenRequest,
  LogoutRequest,
  EmailVerificationRequest,
  PhoneVerificationRequest,
  ResendVerificationRequest,
  PasswordResetRequest,
  PasswordResetConfirmRequest,
  ChangePasswordRequest,
  TokenPayload,
  RefreshTokenPayload,
  TokenPair,
  AuthUser,
  RegisterResponse,
  LoginResponse,
  RefreshTokenResponse,
  LogoutResponse,
  VerificationResponse,
  PasswordResetResponse,
  SessionData,
  ActiveSession,
  SessionListResponse,
  SecurityContext,
  AuthValidationResult,
  ClientAuthData,
  TradieAuthData,
  EnterpriseAuthData,
  AuthEvent,
  RateLimitContext,
  RateLimitResult,
  AuthAuditLog,
  MFASetupRequest,
  MFAVerifyRequest,
  MFAResponse,
  AuthRequestType,
  AuthResponseType,
  VerificationRequestType,
  CreateUserRequest,
  UpdateUserRequest,
  UpdateUserPasswordRequest,
  UpdateUserStatusRequest,
  UserProfile,
  DetailedUserProfile,
  UserListItem,
  UserQueryParams,
  UserFilterOptions,
  UserStatistics,
  UserActivitySummary,
  UpdateSubscriptionRequest,
  CreditTransactionRequest,
  CreditBalance,
  TeamMember,
  EnterpriseTeam,
  TeamInvitationRequest,
  TeamMemberUpdateRequest,
  UserDevice,
  DeviceManagementRequest,
  UserPreferences,
  UpdatePreferencesRequest,
  BulkUserOperation,
  BulkOperationResult,
  UserImportData,
  UserExportOptions,
  UserResponse,
  DetailedUserResponse,
  UserListResponse,
  UserStatisticsResponse,
  CreditBalanceResponse,
  EnterpriseTeamResponse,
  UserDevicesResponse,
  UserPreferencesResponse,
  BulkOperationResponse,
  UserRequestType,
  UserResponseType,
  TeamManagementType,
  UserManagementType,
  ServiceCategory,
  AvailabilityStatus,
  AustralianState,
  BusinessType,
  PropertyType,
  CompanySize,
  ProfileAddress,
  ProfileBusinessInfo,
  ProfileMedia,
  VerificationDocument,
  ProfileRatings,
  ProfileStatistics,
  ProfileCompletion,
  QualityScore,
  TradieQualification,
  TradieInsurance,
  TradieAvailability,
  QuotingPreferences,
  PortfolioItem,
  ClientCommunicationPreferences,
  ClientJobHistory,
  EnterpriseTeamStructure,
  EnterpriseServiceArea,
  EnterpriseCertification,
  EnterpriseOperationalPreferences,
  EnterpriseClientPortfolio,
  CreateProfileRequest,
  CreateTradieProfileRequest,
  CreateClientProfileRequest,
  CreateEnterpriseProfileRequest,
  UpdateProfileRequest,
  ProfileQueryParams,
  ProfileData,
  TradieProfile,
  ClientProfile,
  EnterpriseProfile,
  ProfileResponse,
  ProfileListResponse,
  ProfileType,
  CreateProfileRequestType,
  ProfileRequestType,
  ProfileResponseType,
  AuthenticatedUser,
  AuthenticatedRequest,
  ValidationOptions,
  LoggingOptions,
} from './types';

// ===== DATABASE EXPORTS =====
export {
  databaseConnection,
  connectDatabase,
  disconnectDatabase,
  getDatabaseHealth,
  getDatabaseStatus,
  getMongoConnection,
  getRedisClient,
  startTransaction,
  commitTransaction,
  abortTransaction,
  database,
} from './database';

// ===== DEFAULT EXPORTS =====
export { default as logger } from './utils/logger.util';
export { default as response } from './utils/response.util';
export { default as errorFactory } from './utils/error.util';
export { default as ErrorMiddleware } from './middleware';
export { default as RateLimitMiddleware } from './middleware';
export { default as types } from './types';
export { default as db } from './database';

// ===== SHARED OBJECT =====
export const shared = {
  utils: {
    logger: buildHiveLogger,
    response: buildHiveResponse,
    error: AuthErrorFactory,
    errorHandler: AuthErrorHandler,
  },
  middleware: {
    error: ErrorMiddleware,
    rateLimit: RateLimitMiddleware,
    auth: authMiddleware,
    session: sessionMiddleware,
    cors: corsMiddleware,
    security: securityMiddleware,
    logging: loggingMiddleware,
    validation: validateRequest,
  },
  database: {
    connection: databaseConnection,
    connect: connectDatabase,
    disconnect: disconnectDatabase,
    health: getDatabaseHealth,
    status: getDatabaseStatus,
    mongo: getMongoConnection,
    redis: getRedisClient,
    transaction: {
      start: startTransaction,
      commit: commitTransaction,
      abort: abortTransaction,
    },
  },
  types: {
    AUTH_TYPES: AUTH_TYPES,
    PROFILE_TYPES: PROFILE_TYPES,
  },
};

export default shared;
